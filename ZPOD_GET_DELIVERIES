*&---------------------------------------------------------------------*
*& Report  ZPOD_GET_DELIVERIES
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZPOD_GET_DELIVERIES.
data:
      query_string type table of w3query,
      html type table of w3html,
      mime type table of w3mime.
tables: kna1 , lips , likp.
data kna1_l type kna1.
data pdstk like vbuk-pdstk.
data htmldoc like line of html.
data count type i.
data counter type i value 1.
DATA: name TYPE STRING, _START TYPE STRING, _END TYPE STRING.
data:
       pa_user(30) type c,"FTP Server User
        pa_pswrd(30) type c ,"FTP Server User's Password
        pa_host(64) type c,"IP Address of the FTP Server
        pa_rfcds like rfcdes-rfcdest value 'SAPFTPA',

      mi_key type i value 26101957,"Hardcoded Handler Key,This is always '26101957'
      mi_pwd_len type i ,"For finding the length of the Password,This is used when scrambling the password
      mi_handle type i.



*  initialize ftp connection parameters
move: 'cyril' to pa_user,
    'password%%' to pa_pswrd,
    '54.93.100.18' to pa_host
*    '20160101'  to _start,
*    sy-datum to _end.
.

parameters: b_date type sy-datum,
e_date type sy-datum.

data: bstr type string, estr type string.
if b_date is initial.
  move sy-datum+0(6) to bstr.
  CONCATENATE bstr '01' into bstr.
  move bstr to b_date.

endif.


if e_date is initial.
  move sy-datum+0(6) to estr.
  if sy-datum+4(2) eq '02'.
      CONCATENATE estr '28' into estr.
    else.
    if sy-datum+4(2) eq '09' or sy-datum+4(2) eq '04' or sy-datum+4(2) eq '06' or sy-datum+4(2) eq '11'.
      CONCATENATE estr '30' into estr.
      else.
        CONCATENATE estr '31' into estr.
    endif.
    endif.
*  CONCATENATE estr '30' into estr.
  move estr to e_date.

endif.


data kunnr type kunnr.
data podreturn type ZPOD_INFO_INTERFACE.
data vbeln like likp-vbeln.
data posnr like lips-posnr.
data podtable type table of zpod_info_interface.
data qty type string.
data cts type string.
data tabix type i.
data tbs type string.
data custname type kna1-NAME1.

move name to kunnr.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
  EXPORTING
    INPUT  = kunnr
  IMPORTING
    OUTPUT = kunnr.



* to return keys vbeln driver quantity truckno transporter

move '{"results":[' to htmldoc-line.
insert htmldoc into table html.


data podat like likp-podat.
data del_date like likp-podat.
data potim like likp-potim.
data cust like likp-kunnr.
data matnr type matnr.
data cust_name type string.
data address type string.
data cellno type string.
data contactname type string.
data contactno type string.
data: headedto type string , headedfrom type string, route type string, zone type string, vtext1 type string, vtext2 type string,rt type string.



select l~vbeln l~wadat l~podat l~potim l~kunnr v~pdstk
   into (vbeln,del_date,podat,potim,cust,pdstk)
  from likp  as l  inner join vbuk as v on l~vbeln
  = v~vbeln inner join lips as ls on l~vbeln = ls~vbeln
  where  l~wadat <= e_date AND v~wbstk = 'C'
   and l~wadat >= b_date and ls~matnr in
    ('000000000000000001',
  '000000000000000002',
  '000000000000000003',
  '000000000000000004').

endselect.

move sy-dbcnt to count.
move count to cts.


select l~vbeln l~wadat l~podat l~potim l~kunnr
   l~ablad l~route l~vstel v~pdstk ls~matnr into
   (vbeln,del_date,podat,potim,cust,
  headedto,rt,headedfrom,pdstk,matnr)
  from likp  as l  inner join vbuk as v on l~vbeln
  = v~vbeln inner join lips as ls on l~vbeln = ls~vbeln
   where  v~wbstk = 'C' AND
  l~wadat <= e_date and l~wadat >= b_date and
  ls~matnr in
  ('000000000000000001',
  '000000000000000002',
  '000000000000000003',
  '000000000000000004').


  clear:
  route,
  vtext1,
  zone,
  vtext2,
  contactname,
  contactno,
  podreturn,
  address,
  cust_name,
  cellno.

  select single bezei from TVROT into route where route eq rt and spras Eq 'E'.
  select single vtext from tvstt into vtext1 where vstel eq headedfrom.
  CONCATENATE headedfrom ': ' vtext1 into vtext1.
  select single lzone from kna1 into zone where kunnr eq cust.
  select single vtext from tzont into vtext2 where spras eq 'E' AND land1 eq 'NG' and zone1 eq zone.



  SELECT SINGLE NAMEV into contactname from knvk where kunnr = cust and namev <> ''.
  SELECT SINGLE telf1 into contactno from knvk where kunnr = cust and kunnr <> ''.

  if contactname eq ''.
    move 'NIL' to contactname.
  endif.

  if contactno eq ''.
    move 'NIL' to contactno.
  endif.


  move vbeln to podreturn-vbeln.
  select single * from ZGANTRYINFO into CORRESPONDING FIELDS OF
    podreturn where vbeln = podreturn-vbeln.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = podreturn-haulier
    IMPORTING
      OUTPUT = podreturn-haulier.



  select single  name1 into podreturn-transporter from lfa1
    where lifnr = podreturn-haulier.

  select single lfimg into podreturn-quantity from lips where vbeln = podreturn-vbeln.
  move podreturn-quantity to qty.
  clear htmldoc-line.

  select single name1 stras into (cust_name,address) from kna1 where kunnr = cust.
  select single cellno from zgantryinfo into cellno where vbeln = podreturn-vbeln.

  if counter =  count .
    CONCATENATE '' '{"vbeln":"' vbeln
*      '","posnr":"' podreturn-posnr
    '","driver":"' podreturn-driver
    '","quantity":"' qty
    '","truckno":"' podreturn-truckno
    '","transporter":"' podreturn-transporter
    '","status":"' pdstk
    '","pgi_date":"' del_date '"'
    into htmldoc-line.
    insert htmldoc into table html.
    CONCATENATE
    ',"headed_to":"' headedto
    '","route":"' route
    '","headedfrom":"' vtext1


    '","zone":"' vtext2 '"'
    ',"pod_date":"' podat
    '","pod_time":"' potim
    '","customer":"' cust '"'
    into htmldoc-line.
    insert htmldoc into table html.
    CONCATENATE

    ',"cust_name":"' cust_name
    '","address":"' address
    '","cellno":"' cellno
    '","matnr":"' matnr
    '","contactname":"' contactname
    '","contactno":"' contactno
    '"}'
    into htmldoc-line.
  else.
    CONCATENATE '' '{"vbeln":"' vbeln
*      '","posnr":"' podreturn-posnr
   '","driver":"' podreturn-driver
   '","quantity":"' qty
   '","truckno":"' podreturn-truckno
   '","transporter":"' podreturn-transporter
   '","status":"' pdstk
   '","pgi_date":"' del_date '"'
   into htmldoc-line.
    insert htmldoc into table html.
    CONCATENATE

   ',"headed_to":"' headedto
   '","route":"' route
   '","headedfrom":"' vtext1


    '","zone":"' vtext2 '"'
    ',"pod_date":"' podat
    '","pod_time":"' potim
    '","customer":"' cust '"'
    into htmldoc-line.
    insert htmldoc into table html.
    CONCATENATE
    ',"cust_name":"' cust_name

    '","address":"' address
    '","cellno":"' cellno
    '","matnr":"' matnr
    '","contactname":"' contactname
    '","contactno":"' contactno
   '"},'
   into htmldoc-line.
  endif.


  insert htmldoc into table html.
  add 1 to counter.
endselect.



move ']}' to htmldoc-line.
insert htmldoc into table html.


"FTP Communication Data Objects - [END]
SET EXTENDED CHECK OFF.
mi_pwd_len = STRLEN( pa_pswrd ).
CALL FUNCTION 'HTTP_SCRAMBLE'"For Encrypting the Password
  EXPORTING
    SOURCE      = pa_pswrd
    sourcelen   = mi_pwd_len
    key         = mi_key
  IMPORTING
    destination = pa_pswrd.
CALL FUNCTION 'FTP_CONNECT'"For connecting to the FTP Server's user directory
     EXPORTING
       user            = pa_user
       password        = pa_pswrd
       host            = pa_host
       rfc_destination = pa_rfcds "Using the Background SAP FTP Library as part of the SAP backend System
     IMPORTING
       handle          = mi_handle
     EXCEPTIONS
       not_connected   = 1
       OTHERS          = 2.
IF sy-subrc = 0."When FTP connection established Successfully

  DATA : path(58) ."Path that points to the FTP User's Home Directory
  DATA:extension(5).
  extension = '.json' .
  CONCATENATE '/json/sapr3/deliveries_' b_date '_' e_date extension INTO path .
  CALL FUNCTION 'FTP_R3_TO_SERVER'"For Creating a file from SAP R3 to FTP Server
    EXPORTING
      handle         = mi_handle
      fname          = path
      character_mode = 'X'
    TABLES
      text           = html"Final Internal table to be written to the text file in the FTP Server's Directory
    EXCEPTIONS
      tcpip_error    = 1
      command_error  = 2
      data_error     = 3
      OTHERS         = 4.
ELSE."When FTP connection Fails
  WRITE: / 'Error in FTP Command'.
ENDIF.
CALL FUNCTION 'FTP_DISCONNECT'"For Disconnecting the connected FTP Session
  EXPORTING
    handle = mi_handle
  EXCEPTIONS
    OTHERS = 1.
"For Disabling data typed in the FTP User's password field
*at selection-screen output.
loop at screen.
  if screen-name = 'PA_PSWRD'.
    screen-invisible = '1'.
    modify screen.
  endif.
endloop.

write 'Completed....'.